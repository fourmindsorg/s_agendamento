==============================================
üöÄ CORRIGIR DEPLOY AGORA - COMANDOS PRONTOS
==============================================

O erro ocorre porque a inst√¢ncia EC2 est√° PARADA ou o SSM n√£o est√° configurado.

COMANDOS PARA EXECUTAR NO TERMINAL (Git Bash):
===============================================

1Ô∏è‚É£ Verificar Estado da Inst√¢ncia:
----------------------------------
aws ec2 describe-instances \
  --instance-ids i-0077873407e4114b1 \
  --query 'Reservations[0].Instances[0].[State.Name,PublicIpAddress]' \
  --output table


2Ô∏è‚É£ Se a inst√¢ncia estiver PARADA (stopped):
---------------------------------------------
aws ec2 start-instances --instance-ids i-0077873407e4114b1

# Aguardar iniciar (1-2 minutos)
aws ec2 wait instance-running --instance-ids i-0077873407e4114b1


3Ô∏è‚É£ Verificar SSM (Session Manager):
------------------------------------
aws ssm describe-instance-information \
  --filters "Key=InstanceIds,Values=i-0077873407e4114b1" \
  --query 'InstanceInformationList[0].PingStatus' \
  --output text

# Se mostrar "Online" = ‚úÖ Pode usar SSM
# Se mostrar erro = ‚ùå SSM n√£o est√° configurado


4Ô∏è‚É£ OP√á√ÉO A - Deploy via SSM (Recomendado):
--------------------------------------------
aws ssm start-session --target i-0077873407e4114b1

# Dentro da sess√£o SSM:
cd /opt/s-agendamento
sudo bash infrastructure/deploy_completo.sh
exit


4Ô∏è‚É£ OP√á√ÉO B - Deploy via SSH (Alternativa):
--------------------------------------------
# 1. Obter IP:
IP=$(aws ec2 describe-instances --instance-ids i-0077873407e4114b1 --query 'Reservations[0].Instances[0].PublicIpAddress' --output text)
echo $IP

# 2. Conectar:
ssh ubuntu@$IP

# 3. Dentro do servidor:
cd /opt/s-agendamento
sudo bash infrastructure/deploy_completo.sh
exit


5Ô∏è‚É£ OP√á√ÉO C - Deploy via AWS CLI (Uma linha):
---------------------------------------------
aws ssm send-command \
  --instance-ids i-0077873407e4114b1 \
  --document-name "AWS-RunShellScript" \
  --parameters 'commands=[cd /opt/s-agendamento, git fetch origin, git reset --hard origin/main, source venv/bin/activate, pip install -r requirements.txt --upgrade --quiet, python manage.py migrate, python manage.py collectstatic --noinput, sudo supervisorctl restart s-agendamento, sudo systemctl reload nginx]'


==============================================
üí° DIAGN√ìSTICO
==============================================

Se o SSM n√£o estiver funcionando, voc√™ precisa:

1. Instalar SSM Agent na inst√¢ncia:
   - Conecte via SSH
   - Execute: sudo snap install amazon-ssm-agent --classic

2. Ou configurar IAM role com permiss√µes SSM:
   - AWS Console ‚Üí EC2 ‚Üí Instances
   - Selecione a inst√¢ncia ‚Üí Actions ‚Üí Security ‚Üí Modify IAM role
   - Adicione IAM role com AmazonSSMManagedInstanceCore policy

3. Ou usar SSH (mais simples):
   - Conecte via ssh ubuntu@IP
   - Execute o script de deploy

==============================================
üìù DEPLOY MANUAL SIMPLES (RECOMENDADO)
==============================================

Execute estes comandos em sequ√™ncia:

# 1. Iniciar inst√¢ncia (se estiver parada)
aws ec2 start-instances --instance-ids i-0077873407e4114b1

# 2. Aguardar (1-2 minutos)
aws ec2 wait instance-running --instance-ids i-0077873407e4114b1
sleep 30

# 3. Obter IP
aws ec2 describe-instances --instance-ids i-0077873407e4114b1 --query 'Reservations[0].Instances[0].PublicIpAddress' --output text

# 4. Conectar e fazer deploy
# (Cole o IP do passo 3)
ssh ubuntu@IP_AQUI
cd /opt/s-agendamento
sudo bash infrastructure/deploy_completo.sh

==============================================
‚úÖ Ap√≥s o deploy, teste:
==============================================
- http://52.91.139.151
- https://fourmindstech.com.br


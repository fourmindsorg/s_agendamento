#!/usr/bin/env python
"""
Script para executar o sistema em modo de produ√ß√£o
"""
import os
import sys
import subprocess

def main():
    """Executa o sistema em modo de produ√ß√£o"""
    
    # Configurar vari√°veis de ambiente para produ√ß√£o
    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "core.settings_production")
    os.environ.setdefault("DEBUG", "False")
    
    # Verificar se as depend√™ncias est√£o instaladas
    try:
        import whitenoise
        print("‚úì WhiteNoise dispon√≠vel")
    except ImportError:
        print("‚ö†Ô∏è  WhiteNoise n√£o encontrado. Instalando depend√™ncias...")
        subprocess.run([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
    
    # Coletar arquivos est√°ticos
    print("üì¶ Coletando arquivos est√°ticos...")
    subprocess.run([sys.executable, "manage.py", "collectstatic", "--noinput"])
    
    # Executar migra√ß√µes
    print("üóÑÔ∏è  Executando migra√ß√µes...")
    subprocess.run([sys.executable, "manage.py", "migrate"])
    
    # Iniciar servidor
    print("üöÄ Iniciando servidor de produ√ß√£o...")
    print("   Acesse: http://localhost:8000")
    print("   Pressione Ctrl+C para parar")
    
    # Tentar usar gunicorn se dispon√≠vel, sen√£o usar runserver
    try:
        import gunicorn
        subprocess.run([
            sys.executable, "-m", "gunicorn", 
            "core.wsgi:application", 
            "--bind", "0.0.0.0:8000",
            "--workers", "3"
        ])
    except ImportError:
        print("‚ö†Ô∏è  Gunicorn n√£o encontrado. Usando runserver...")
        subprocess.run([sys.executable, "manage.py", "runserver", "0.0.0.0:8000"])

if __name__ == "__main__":
    main()

# .github/workflows/deploy.yml
name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup environment variables
        run: |
          cp .env.example .env
          echo "SECRET_KEY=test-secret-key-for-deploy" >> .env
          echo "DEBUG=False" >> .env
          echo "ENVIRONMENT=production" >> .env

      - name: Run Django checks
        run: |
          python manage.py check
          python manage.py check --deploy

      - name: Run tests
        run: |
          python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout code from GitHub main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup environment variables
        run: |
          cp .env.example .env
          echo "SECRET_KEY=test-secret-key-for-deploy" >> .env
          echo "DEBUG=False" >> .env
          echo "ENVIRONMENT=production" >> .env

      - name: Run tests
        run: |
          python manage.py check
          python manage.py test

      - name: Prepare deployment instructions
        run: |
          echo "# üöÄ Instru√ß√µes para Deploy Manual" > DEPLOY_INSTRUCTIONS.md
          echo "" >> DEPLOY_INSTRUCTIONS.md
          echo "O deploy autom√°tico via SSM n√£o est√° dispon√≠vel no momento." >> DEPLOY_INSTRUCTIONS.md
          echo "Execute o deploy manualmente no servidor:" >> DEPLOY_INSTRUCTIONS.md
          echo "" >> DEPLOY_INSTRUCTIONS.md
          echo "## Op√ß√£o 1: Deploy via SSH" >> DEPLOY_INSTRUCTIONS.md
          echo "\`\`\`bash" >> DEPLOY_INSTRUCTIONS.md
          echo "ssh -i sua_chave.pem ubuntu@52.91.139.151" >> DEPLOY_INSTRUCTIONS.md
          echo "cd /opt/s-agendamento" >> DEPLOY_INSTRUCTIONS.md
          echo "sudo bash infrastructure/deploy_completo.sh" >> DEPLOY_INSTRUCTIONS.md
          echo "\`\`\`" >> DEPLOY_INSTRUCTIONS.md
          echo "" >> DEPLOY_INSTRUCTIONS.md
          echo "## Op√ß√£o 2: Deploy via AWS Session Manager" >> DEPLOY_INSTRUCTIONS.md
          echo "\`\`\`bash" >> DEPLOY_INSTRUCTIONS.md
          echo "aws ssm start-session --target i-0077873407e4114b1" >> DEPLOY_INSTRUCTIONS.md
          echo "cd /opt/s-agendamento" >> DEPLOY_INSTRUCTIONS.md
          echo "sudo bash infrastructure/deploy_completo.sh" >> DEPLOY_INSTRUCTIONS.md
          echo "\`\`\`" >> DEPLOY_INSTRUCTIONS.md
          echo "" >> DEPLOY_INSTRUCTIONS.md
          echo "## Servidor:" >> DEPLOY_INSTRUCTIONS.md
          echo "- IP: 52.91.139.151" >> DEPLOY_INSTRUCTIONS.md
          echo "- Inst√¢ncia: i-0077873407e4114b1" >> DEPLOY_INSTRUCTIONS.md
          echo "- Branch: main" >> DEPLOY_INSTRUCTIONS.md
          
          cat DEPLOY_INSTRUCTIONS.md

      - name: Health Check
        run: |
          echo "üè• Verificando sa√∫de do servidor..."
          sleep 30

          # Testar HTTP primeiro
          echo "üîç Testando HTTP..."
          if curl -f -s http://fourmindstech.com.br/ > /dev/null; then
            echo "‚úÖ HTTP funcionando!"
          else
            echo "‚ùå HTTP n√£o funciona"
          fi

          # Testar HTTPS
          echo "üîç Testando HTTPS..."
          if curl -f -s https://fourmindstech.com.br/ > /dev/null; then
            echo "‚úÖ HTTPS funcionando!"
          else
            echo "‚ùå HTTPS n√£o funciona"
          fi

          # Testar endpoint espec√≠fico
          echo "üîç Testando endpoint de planos..."
          if curl -f -s https://fourmindstech.com.br/authentication/planos/ > /dev/null; then
            echo "‚úÖ Endpoint de planos funcionando!"
          else
            echo "‚ùå Endpoint de planos n√£o funciona"
          fi

          echo "‚úÖ Health check conclu√≠do!"

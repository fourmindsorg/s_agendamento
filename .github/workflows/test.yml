name: Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches-ignore:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black isort pytest pytest-django

      - name: Linting com flake8
        run: |
          # Parar se houver erros de sintaxe ou nomes indefinidos
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Avisos (não para o build)
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        continue-on-error: true

      - name: Verificar formatação com black
        run: black --check .
        continue-on-error: true

      - name: Verificar imports com isort
        run: isort --check-only .
        continue-on-error: true

      - name: Django Check
        run: python manage.py check
        env:
          DJANGO_SETTINGS_MODULE: core.settings

      - name: Testes Django
        run: python manage.py test
        env:
          DJANGO_SETTINGS_MODULE: core.settings

      - name: Relatório de Cobertura
        run: |
          pip install coverage
          coverage run --source='.' manage.py test
          coverage report
        continue-on-error: true

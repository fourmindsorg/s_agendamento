# .github/workflows/deploy-manual.yml
name: Manual Deploy Instructions

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  print-instructions:
    runs-on: ubuntu-latest
    steps:
      - name: Print Deployment Instructions
        run: |
          echo "# üöÄ Instru√ß√µes para Deploy Manual" 
          echo ""
          echo "## üìã O que foi atualizado:"
          echo "- ‚úÖ Testes corrigidos (CI agora passa)"
          echo "- ‚úÖ Sistema pronto para deploy"
          echo ""
          echo "## üñ•Ô∏è Como fazer o deploy agora:"
          echo ""
          echo "### Op√ß√£o 1: Via AWS CLI (Recomendado)"
          echo "\`\`\`bash"
          echo "# 1. Configure AWS CLI"
          echo "aws configure"
          echo ""
          echo "# 2. Verifique se a inst√¢ncia est√° rodando"
          echo "aws ec2 describe-instance-status --instance-ids i-0077873407e4114b1"
          echo ""
          echo "# 3. Conecte via SSM (se dispon√≠vel)"
          echo "aws ssm start-session --target i-0077873407e4114b1"
          echo "# Dentro da sess√£o:"
          echo "cd /opt/s-agendamento"
          echo "sudo bash infrastructure/deploy_completo.sh"
          echo "\`\`\`"
          echo ""
          echo "### Op√ß√£o 2: Via SSH"
          echo "\`\`\`bash"
          echo "# 1. Obtenha o IP p√∫blico"
          echo "aws ec2 describe-instances --instance-ids i-0077873407e4114b1 --query 'Reservations[0].Instances[0].PublicIpAddress' --output text"
          echo ""
          echo "# 2. Conecte via SSH"
          echo "ssh ubuntu@<IP_PUBLICO>"
          echo "# Dentro da sess√£o:"
          echo "cd /opt/s-agendamento"
          echo "sudo bash infrastructure/deploy_completo.sh"
          echo "\`\`\`"
          echo ""
          echo "### Op√ß√£o 3: Comandos Individuais (via SSM)"
          echo "\`\`\`bash"
          echo "aws ssm send-command \\"
          echo "  --instance-ids i-0077873407e4114b1 \\"
          echo "  --document-name 'AWS-RunShellScript' \\"
          echo "  --parameters 'commands=["
          echo "    \"cd /opt/s-agendamento\","
          echo "    \"git fetch origin\","
          echo "    \"git reset --hard origin/main\","
          echo "    \"source venv/bin/activate\","
          echo "    \"python -m pip install --upgrade pip setuptools wheel\",",
          echo "    \"pip install --no-cache-dir --upgrade --force-reinstall -r requirements.txt\",",
          echo "    \"python manage.py migrate\","
          echo "    \"python manage.py collectstatic --noinput\","
          echo "    \"sudo supervisorctl restart s-agendamento\","
          echo "    \"sudo systemctl reload nginx\""
          echo "  ]' \\"
          echo "  --query 'Command.CommandId' \\"
          echo "  --output text"
          echo "\`\`\`"
          echo ""
          echo "## üîç Verificar Estado da Inst√¢ncia:"
          echo "\`\`\`bash"
          echo "aws ec2 describe-instances --instance-ids i-0077873407e4114b1 --query 'Reservations[0].Instances[0].[State.Name,PublicIpAddress,InstanceType]' --output table"
          echo "\`\`\`"
          echo ""
          echo "## ‚ö†Ô∏è Se a inst√¢ncia estiver parada:"
          echo "\`\`\`bash"
          echo "aws ec2 start-instances --instance-ids i-0077873407e4114b1"
          echo "aws ec2 wait instance-running --instance-ids i-0077873407e4114b1"
          echo "\`\`\`"
          echo ""
          echo "## ‚úÖ Testar ap√≥s deploy:"
          echo "- HTTP: http://52.91.139.151"
          echo "- HTTPS: https://fourmindstech.com.br"
          echo ""
